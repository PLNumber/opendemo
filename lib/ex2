import 'package:flutter/material.dart';
import 'dart:math' as math;

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Hero Widget Demo',
      home: FirstPage(),
    );
  }
}

class FirstPage extends StatelessWidget {
  const FirstPage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Hero Widget Demo'),
      ),
      body: GestureDetector(
        onTap: () {
          Navigator.push(
              context, MaterialPageRoute(builder: (context) => SecondPage()));
        },
        child: Hero(
          tag: 'icon',
          child: Icon(
            Icons.sentiment_satisfied,
            size: 100.0,
          ),
        ),
      ),
    );
  }
}

class SecondPage extends StatelessWidget {
  const SecondPage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('HeroWidgetDemo'),
      ),
      body: Center(
        child: GestureDetector(
          onTap: () {
            Navigator.pop(context);
          },
          child: Hero(
            tag: 'icon',
            child: Icon(
              Icons.sentiment_satisfied,
              size: 200.0,
            ),
          ),
        ),
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage>
    with SingleTickerProviderStateMixin {
  //SingleTickerProviderStateMixin상속(with다중상속예약어)
  late AnimationController _controller; //late: non-nullable인스턴스를나중에초기화
  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: const Duration(seconds: 1), //애니메이션지속시간설정
//vsync에는TickerProvider를전달해야함.
      //이클래스의경우SingleTickerProviderStateMixin을상속받으므로this로설정
      vsync: this,
    )..repeat(); //애니메이션반복실행
  }

  @override
  void dispose() {
    _controller.dispose(); //사용하지않을경우dispose
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('RoationTransitionDemo'),
      ),
      body: AnimatedBuilder(
        animation: _controller, //AnimationController 인스턴스 전달
        builder: (context, child) {
          return Transform.rotate(
              angle: _controller.value * 2.0 * math.pi,
              child: Transform.scale(
                scale: _controller.value * 3,
                child: child,
              ));
        },
        child: Center(
          child: IconButton(
            icon: Icon(Icons.sentiment_satisfied),
            iconSize: 200.0,
            onPressed: () {
              //버튼이눌리면,
              if (_controller.duration?.inSeconds == 1) {
                //현재설정된duration이1초이면,
                _controller.duration = const Duration(seconds: 3); //3초로변경
              } else {
                //3초로설정되어있으면,
                _controller.duration = const Duration(seconds: 1); //1초로변경
              }
              _controller.repeat(); //애니메이션반복
            },
          ),
        ),
      ),
    );
  }
}
